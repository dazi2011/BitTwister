# 📂 BitTwister — macOS 文件损坏与修复工具

**BitTwister** 是一款原生于 macOS 的小型实用软件，可在受控环境下对文件进行“故意损坏”并尝试修复，主要面向 QA、数据恢复、取证教学等场景。

---

## 🛠 功能概览

| 类别       | 亮点                                                                                  |
| -------- | ----------------------------------------------------------------------------------- |
| **损坏模式** | • 内置 5 种损坏策略（见下表）• “保留原文件” 开关• 自定义输出路径• 拖拽或 **上传文件** 一键批量损坏                         |
| **恢复模式** | • 拖拽或上传损坏文件自动修复• 多种头部修复算法（PNG/JPEG/ZIP/PDF/按位翻转等）• “修复后替换原文件” 开关• 不覆盖时写入用户指定 *恢复路径* |
| **用户体验** | • 界面中英双语（English / 简体中文）• 主题：浅色 / 深色 / 跟随系统• 设置持久化；日志可筛选并限制行数                       |
| **安全提示** | • 默认仅操作 *副本*• 恢复模式上传后弹窗确认，避免误操作                                                     |

---

## 🔄 内置损坏策略

| 策略         | 动作                     | 典型用途            |
| ---------- | ---------------------- | --------------- |
| **按位翻转**   | 对首 *n* 字节执行 XOR `0xFF` | 模拟电磁干扰造成的位反转    |
| **随机字节覆盖** | 随机写入零散字节               | 测试程序对位腐烂的容错能力   |
| **零填充**    | 置零文件头                  | 快速破坏大多数文件头      |
| **字节反序**   | 反转选定块的顺序               | 检验解析器对于对齐错误的鲁棒性 |
| **位移位**    | 循环左/右移位                | 研究解码器对位漂移的容忍度   |

*当开启“保留原文件”时，上述策略都是非破坏性的。*

---

## 🩺 恢复模式（v1.1.0 新增）

1. **选取文件**：拖拽或点击 **上传文件**。
2. **风险确认**：弹窗提醒“修复失败可能造成二次损伤”。
3. **自动分析**：按策略链尝试修复：
   • 魔数修复（PNG/JPEG/ZIP/PDF 等）
   • 头部按位“反翻转”
   • 头部全零 → 0xFF 填充
4. **输出策略**：
   • 若启用 *替换原文件* → 直接覆盖
   • 否则写入 *恢复路径* 或同目录 `recovered_<文件名>`
5. **结果提示**：`✅ 已修复` / `ℹ️ 文件未损坏` / `❌ 修复失败`。

---

## 🚀 快速开始

### 方法一 · 下载预编译程序

1. 前往 [Releases](https://github.com/dazi2011/BitTwister/releases) 下载最新 **Zip**。
2. 解压后将 **BitTwister.app** 拖入 `/Applications`。
3. 第一次启动需 **右击 → 打开** 以绕过 Gatekeeper。

### 方法二 · 源码编译

```bash
# 克隆并编译
 git clone https://github.com/dazi2011/BitTwister.git
 cd BitTwister
 open BitTwister.xcodeproj   # 需 Xcode 15+
```

---

## 📜 更新日志（摘录）

### 1.1.0 · 2025‑07‑11

* 新增恢复模式：上传文件 + 风险确认弹窗
* 设置中心：损坏/恢复路径与覆盖开关
* UI：Section 标题加粗；版本号升级
* 内部：更安全的写入逻辑 & 更丰富的日志

更多历史请见 `CHANGELOG.md`。

---

## 🤝 贡献方式

欢迎 PR / Issue，尤其是新的损坏或修复策略！详见 `CONTRIBUTING.md`。

---

## 📝 许可证

本项目采用 **MIT License**，详见 `LICENSE` 文件。
